// To parse this JSON data, do
//
//     final getAllModel = getAllModelFromJson(jsonString);

import 'dart:convert';

GetAllModel getAllModelFromJson(String str) => GetAllModel.fromJson(json.decode(str));

String getAllModelToJson(GetAllModel data) => json.encode(data.toJson());

class GetAllModel {
  int statuscode;
  String message;
  List<getAllDataModel> data;

  GetAllModel({
    required this.statuscode,
    required this.message,
    required this.data,
  });

  factory GetAllModel.fromJson(Map<String, dynamic> json) => GetAllModel(
    statuscode: json["statuscode"],
    message: json["message"],
    data: List<getAllDataModel>.from(json["data"].map((x) => getAllDataModel.fromJson(x))),
  );

  Map<String, dynamic> toJson() => {
    "statuscode": statuscode,
    "message": message,
    "data": List<dynamic>.from(data.map((x) => x.toJson())),
  };
}

class getAllDataModel {
  int fiId;
  int fiCode;
  String creator;
  DateTime dob;
  String gender;
  String title;
  String fName;
  dynamic mName;
  String lName;
  dynamic cast;
  String pAddress1;
  String pAddress2;
  String pAddress3;
  String pCity;
  String pState;
  String pPincode;
  String pPhone;
  dynamic currentAddress1;
  dynamic currentAddress2;
  dynamic currentAddress3;
  dynamic currentCity;
  dynamic currentState;
  dynamic currentPincode;
  dynamic currentPhone;
  dynamic district;
  dynamic subDistrict;
  dynamic village;
  String aadharNo;
  bool isAadharVerified;
  String panNo;
  bool isPanVerified;
  String dl;
  dynamic dLExpiry;
  bool isDlVerified;
  String voterId;
  bool isVoterVerified;
  dynamic passbook;
  String passport;
  dynamic passportExpiry;
  dynamic bankAc;
  String bankName;
  dynamic bankIfcs;
  dynamic bankAddress;
  bool isHouseRental;
  int loanAmount;
  dynamic loanDuration;
  int emi;
  dynamic vehicleType;
  dynamic depedentPerson;
  dynamic groupCode;
  dynamic branchCode;
  dynamic religion;
  dynamic smCode;
  bool isPhnnoVerified;
  int userId;
  int propertyArea;
  bool isExserviceman;
  dynamic latitude;
  dynamic longitude;
  dynamic geoDateTime;
  dynamic eSignUuid;
  bool isNameVerify;
  int noOfChildren;
  dynamic emailId;
  bool isHandicap;
  dynamic handicapType;
  dynamic placeOfBirth;
  dynamic forM60TnxDt;
  dynamic forM60Submissiondate;
  dynamic maritaLStatus;
  dynamic reservatioNCategory;
  dynamic encProperty;
  bool isActive;
  DateTime createdOn;
  dynamic createdBy;
  DateTime modifiedOn;
  dynamic modifiedBy;
  bool approved;
  dynamic residentialType;
  dynamic houseOwnerName;
  dynamic rentofHouse;
  dynamic panName;
  dynamic voterName;
  dynamic aadharName;
  dynamic dLName;
  dynamic liveInPresentPlace;
  dynamic authId;
  dynamic authUser;
  dynamic bankAcOpenDate;
  dynamic profilePic;
  dynamic fiSignature;
  dynamic caseNo;
  dynamic spousEFirstName;
  dynamic spousEMiddleName;
  dynamic spousELastName;
  dynamic motheRFirstName;
  dynamic motheRMiddleName;
  dynamic motheRLastName;
  dynamic motheRMaidenName;
  dynamic fatheRFirstName;
  dynamic fatheRMiddleName;
  dynamic fatheRLastName;
  int schoolingChildren;
  int otherDependents;
  bool isCkyCisDone;
  dynamic errormsg;
  bool isvalide;
  String financialStatus;

  getAllDataModel({
    required this.fiId,
    required this.fiCode,
    required this.creator,
    required this.dob,
    required this.gender,
    required this.title,
    required this.fName,
    required this.mName,
    required this.lName,
    required this.cast,
    required this.pAddress1,
    required this.pAddress2,
    required this.pAddress3,
    required this.pCity,
    required this.pState,
    required this.pPincode,
    required this.pPhone,
    this.currentAddress1,
    this.currentAddress2,
    this.currentAddress3,
    this.currentCity,
    this.currentState,
    this.currentPincode,
    this.currentPhone,
    this.district,
    this.subDistrict,
    this.village,
    required this.aadharNo,
    required this.isAadharVerified,
    required this.panNo,
    required this.isPanVerified,
    required this.dl,
    required this.dLExpiry,
    required this.isDlVerified,
    required this.voterId,
    required this.isVoterVerified,
    required this.passbook,
    required this.passport,
    required this.passportExpiry,
    required this.bankAc,
    required this.bankName,
    required this.bankIfcs,
    required this.bankAddress,
    required this.isHouseRental,
    required this.loanAmount,
    required this.loanDuration,
    required this.emi,
    required this.vehicleType,
    required this.depedentPerson,
    required this.groupCode,
    required this.branchCode,
    required this.religion,
    required this.smCode,
    required this.isPhnnoVerified,
    required this.userId,
    required this.propertyArea,
    required this.isExserviceman,
    required this.latitude,
    required this.longitude,
    required this.geoDateTime,
    required this.eSignUuid,
    required this.isNameVerify,
    required this.noOfChildren,
    required this.emailId,
    required this.isHandicap,
    required this.handicapType,
    required this.placeOfBirth,
    required this.forM60TnxDt,
    required this.forM60Submissiondate,
    required this.maritaLStatus,
    required this.reservatioNCategory,
    required this.encProperty,
    required this.isActive,
    required this.createdOn,
    required this.createdBy,
    required this.modifiedOn,
    required this.modifiedBy,
    required this.approved,
    required this.residentialType,
    required this.houseOwnerName,
    required this.rentofHouse,
    required this.panName,
    required this.voterName,
    required this.aadharName,
    required this.dLName,
    required this.liveInPresentPlace,
    required this.authId,
    required this.authUser,
    required this.bankAcOpenDate,
    required this.profilePic,
    required this.fiSignature,
    required this.caseNo,
    required this.spousEFirstName,
    required this.spousEMiddleName,
    required this.spousELastName,
    required this.motheRFirstName,
    required this.motheRMiddleName,
    required this.motheRLastName,
    required this.motheRMaidenName,
    required this.fatheRFirstName,
    required this.fatheRMiddleName,
    required this.fatheRLastName,
    required this.schoolingChildren,
    required this.otherDependents,
    required this.isCkyCisDone,
    required this.errormsg,
    required this.isvalide,
    required this.financialStatus,
  });

  factory getAllDataModel.fromJson(Map<String, dynamic> json) => getAllDataModel(
    fiId: json["fi_Id"],
    fiCode: json["fiCode"],
    creator: json["creator"],
    dob: DateTime.parse(json["dob"]),
    gender: json["gender"],
    title: json["title"],
    fName: json["f_Name"],
    mName: json["m_Name"],
    lName: json["l_Name"],
    cast: json["cast"],
    pAddress1: json["p_Address1"],
    pAddress2: json["p_Address2"],
    pAddress3: json["p_Address3"],
    pCity: json["p_City"],
    pState: json["p_State"],
    pPincode: json["p_Pincode"],
    pPhone: json["p_Phone"],
    currentAddress1: json["current_Address1"],
    currentAddress2: json["current_Address2"],
    currentAddress3: json["current_Address3"],
    currentCity: json["current_City"],
    currentState: json["current_State"],
    currentPincode: json["current_Pincode"],
    currentPhone: json["current_Phone"],
    district: json["district"],
    subDistrict: json["sub_District"],
    village: json["village"],
    aadharNo: json["aadhar_no"],
    isAadharVerified: json["isAadharVerified"],
    panNo: json["pan_no"],
    isPanVerified: json["isPanVerified"],
    dl: json["dl"],
    dLExpiry: json["dL_Expiry"],
    isDlVerified: json["isDlVerified"],
    voterId: json["voter_id"],
    isVoterVerified: json["isVoterVerified"],
    passbook: json["passbook"],
    passport: json["passport"],
    passportExpiry: json["passport_expiry"],
    bankAc: json["bank_Ac"],
    bankName: json["bank_name"],
    bankIfcs: json["bank_IFCS"],
    bankAddress: json["bank_address"],
    isHouseRental: json["is_house_rental"],
    loanAmount: json["loan_amount"],
    loanDuration: json["loan_Duration"],
    emi: json["emi"],
    vehicleType: json["vehicle_type"],
    depedentPerson: json["depedent_person"],
    groupCode: json["group_code"],
    branchCode: json["branch_code"],
    religion: json["religion"],
    smCode: json["smCode"],
    isPhnnoVerified: json["is_phnno_verified"],
    userId: json["user_Id"],
    propertyArea: json["property_area"],
    isExserviceman: json["is_exserviceman"],
    latitude: json["latitude"],
    longitude: json["longitude"],
    geoDateTime: json["geoDateTime"],
    eSignUuid: json["eSignUUID"],
    isNameVerify: json["isNameVerify"],
    noOfChildren: json["no_of_children"],
    emailId: json["email_Id"],
    isHandicap: json["isHandicap"],
    handicapType: json["handicap_type"],
    placeOfBirth: json["place_Of_Birth"],
    forM60TnxDt: json["forM60_TNX_DT"],
    forM60Submissiondate: json["forM60_SUBMISSIONDATE"],
    maritaLStatus: json["maritaL_STATUS"],
    reservatioNCategory: json["reservatioN_CATEGORY"],
    encProperty: json["enc_Property"],
    isActive: json["isActive"],
    createdOn: DateTime.parse(json["createdOn"]),
    createdBy: json["createdBy"],
    modifiedOn: DateTime.parse(json["modifiedOn"]),
    modifiedBy: json["modifiedBy"],
    approved: json["approved"],
    residentialType: json["residential_type"],
    houseOwnerName: json["house_owner_Name"],
    rentofHouse: json["rentofHouse"],
    panName: json["pan_Name"],
    voterName: json["voter_Name"],
    aadharName: json["aadhar_Name"],
    dLName: json["dL_Name"],
    liveInPresentPlace: json["liveInPresentPlace"],
    authId: json["auth_Id"],
    authUser: json["auth_User"],
    bankAcOpenDate: json["bankAC_OpenDate"],
    profilePic: json["profilePic"],
    fiSignature: json["fi_Signature"],
    caseNo: json["caseNo"],
    spousEFirstName: json["spousE_FIRST_NAME"],
    spousEMiddleName: json["spousE_MIDDLE_NAME"],
    spousELastName: json["spousE_LAST_NAME"],
    motheRFirstName: json["motheR_FIRST_NAME"],
    motheRMiddleName: json["motheR_MIDDLE_NAME"],
    motheRLastName: json["motheR_LAST_NAME"],
    motheRMaidenName: json["motheR_MAIDEN_NAME"],
    fatheRFirstName: json["fatheR_FIRST_NAME"],
    fatheRMiddleName: json["fatheR_MIDDLE_NAME"],
    fatheRLastName: json["fatheR_LAST_NAME"],
    schoolingChildren: json["schoolingChildren"],
    otherDependents: json["otherDependents"],
    isCkyCisDone: json["isCKYCisDone"],
    errormsg: json["errormsg"],
    isvalide: json["isvalide"],
    financialStatus: json["financialStatus"],
  );

  Map<String, dynamic> toJson() => {
    "fi_Id": fiId,
    "fiCode": fiCode,
    "creator": creator,
    "dob": dob.toIso8601String(),
    "gender": gender,
    "title": title,
    "f_Name": fName,
    "m_Name": mName,
    "l_Name": lName,
    "cast": cast,
    "p_Address1": pAddress1,
    "p_Address2": pAddress2,
    "p_Address3": pAddress3,
    "p_City": pCity,
    "p_State": pState,
    "p_Pincode": pPincode,
    "p_Phone": pPhone,
    "current_Address1": currentAddress1,
    "current_Address2": currentAddress2,
    "current_Address3": currentAddress3,
    "current_City": currentCity,
    "current_State": currentState,
    "current_Pincode": currentPincode,
    "current_Phone": currentPhone,
    "district": district,
    "sub_District": subDistrict,
    "village": village,
    "aadhar_no": aadharNo,
    "isAadharVerified": isAadharVerified,
    "pan_no": panNo,
    "isPanVerified": isPanVerified,
    "dl": dl,
    "dL_Expiry": dLExpiry,
    "isDlVerified": isDlVerified,
    "voter_id": voterId,
    "isVoterVerified": isVoterVerified,
    "passbook": passbook,
    "passport": passport,
    "passport_expiry": passportExpiry,
    "bank_Ac": bankAc,
    "bank_name": bankName,
    "bank_IFCS": bankIfcs,
    "bank_address": bankAddress,
    "is_house_rental": isHouseRental,
    "loan_amount": loanAmount,
    "loan_Duration": loanDuration,
    "emi": emi,
    "vehicle_type": vehicleType,
    "depedent_person": depedentPerson,
    "group_code": groupCode,
    "branch_code": branchCode,
    "religion": religion,
    "smCode": smCode,
    "is_phnno_verified": isPhnnoVerified,
    "user_Id": userId,
    "property_area": propertyArea,
    "is_exserviceman": isExserviceman,
    "latitude": latitude,
    "longitude": longitude,
    "geoDateTime": geoDateTime,
    "eSignUUID": eSignUuid,
    "isNameVerify": isNameVerify,
    "no_of_children": noOfChildren,
    "email_Id": emailId,
    "isHandicap": isHandicap,
    "handicap_type": handicapType,
    "place_Of_Birth": placeOfBirth,
    "forM60_TNX_DT": forM60TnxDt,
    "forM60_SUBMISSIONDATE": forM60Submissiondate,
    "maritaL_STATUS": maritaLStatus,
    "reservatioN_CATEGORY": reservatioNCategory,
    "enc_Property": encProperty,
    "isActive": isActive,
    "createdOn": createdOn.toIso8601String(),
    "createdBy": createdBy,
    "modifiedOn": modifiedOn.toIso8601String(),
    "modifiedBy": modifiedBy,
    "approved": approved,
    "residential_type": residentialType,
    "house_owner_Name": houseOwnerName,
    "rentofHouse": rentofHouse,
    "pan_Name": panName,
    "voter_Name": voterName,
    "aadhar_Name": aadharName,
    "dL_Name": dLName,
    "liveInPresentPlace": liveInPresentPlace,
    "auth_Id": authId,
    "auth_User": authUser,
    "bankAC_OpenDate": bankAcOpenDate,
    "profilePic": profilePic,
    "fi_Signature": fiSignature,
    "caseNo": caseNo,
    "spousE_FIRST_NAME": spousEFirstName,
    "spousE_MIDDLE_NAME": spousEMiddleName,
    "spousE_LAST_NAME": spousELastName,
    "motheR_FIRST_NAME": motheRFirstName,
    "motheR_MIDDLE_NAME": motheRMiddleName,
    "motheR_LAST_NAME": motheRLastName,
    "motheR_MAIDEN_NAME": motheRMaidenName,
    "fatheR_FIRST_NAME": fatheRFirstName,
    "fatheR_MIDDLE_NAME": fatheRMiddleName,
    "fatheR_LAST_NAME": fatheRLastName,
    "schoolingChildren": schoolingChildren,
    "otherDependents": otherDependents,
    "isCKYCisDone": isCkyCisDone,
    "errormsg": errormsg,
    "isvalide": isvalide,
    "financialStatus": financialStatus,
  };
}
